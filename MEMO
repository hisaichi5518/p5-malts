## Maltsを開発する時に注意する点

* フレームワークでの実装は極力少なくし、モジュールがある場合はそれを使用する
* Maltsの特徴に反する（遅くなる・分かりにくくなる）モジュールは使用しない
* テスト・ドキュメント・コードを一緒に書く
* 一つでも欠ければcommitしない(同時に3つコミットする)
* 記述方法には自由度を持たせてあるが、ベストプラクティスを用意し、初心者にも分かりやすい使い方を定める
* なぜそのコードを書くのか考えてから書く
* 使い方が間違ってる場合は、警告ではなくエラーを出す。
* （設定ファイルをロードしようとしているのに、ファイルがなかった場合はエラーなど）
* フレームワークが勝手に行う"よしなに"は死ね
* なぜそうするかを明確にする

## TODO
* ログを取る。ルーティングテーブルとか出せるようにする
* ただし、プラグインでやる
* MALTS_DEBUG=1
* PLACK_ENV=developmentだったら自動でDEBUG MODEを有効にするプラグイン
* use Malts::Style::Premium qw(log config db api);
* logもstyleに
* オレオレコンテナ実装はStyleで
* なぜ、ContainerではなくStyleかー＞スタイルを統一する為にあるから。
* 個別に設定したい場合は、MyApp::Webなどに書く。
* PODがないStyleはクソだよねーみたいな
* Malts::Style::会社名 など出来るし、会社毎に規約が設定出来る。
* これはCPANにあげるべきじゃないよね

# アクセサである必要はない
my $r = $self->routes('RSmart' => {namespace => ''});
$r->route(
    '/table/:table_name/:mode' => {
        mode       => qr/insert|update/,
        table_name => qr/[0-9a-zA-Z]+/,
    },
    { controller => 'Root', action => 'index' },
    { via => 'GET' }
);
$r->dumper;
